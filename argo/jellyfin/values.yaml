#
# IMPORTANT NOTE
#
# This chart inherits from our common library chart. You can check the default values/options here:
# https://github.com/k8s-at-home/library-charts/tree/main/charts/stable/common/values.yaml
#

image:
  # -- image repository
  repository: jellyfin/jellyfin
  # -- image tag
  # @default -- chart.appVersion
  tag:
  # -- image pull policy
  pullPolicy: IfNotPresent

# -- environment variables. See [image docs](https://jellyfin.org/docs/general/administration/configuration.html) for more details.
# @default -- See below
env:
  # -- Set the container timezone
  TZ: "Europe/Zurich"

# -- Configures service settings for the chart.
# @default -- See values.yaml
service:
  main:
    ports:
      http:
        port: 8096

ingress:
  # -- Enable and configure ingress settings for the chart under this key.
  # @default -- See values.yaml
  main:
    enabled: true
    hosts:
      - host: "jellyfin.fauli"
        paths:
          - path: /
            pathType: Prefix
      - host: "jellyfin.gute-idee.me"
        paths:
          - path: /
            pathType: Prefix
    tls:
     - secretName: origin-cert
       hosts:
         - jellyfin.gute-idee.me


# -- Configure persistence settings for the chart under this key.
# @default -- See values.yaml
persistence:
    # -- Enables or disables the persistence item
    enabled: true

    # -- Sets the persistence type
    # Valid options are pvc, emptyDir, hostPath, secret, configMap or custom
    type: pvc
    mountPath: /config

    # -- Storage Class for the config volume.
    # If set to `-`, dynamic provisioning is disabled.
    # If set to something else, the given storageClass is used.
    # If undefined (the default) or set to null, no storageClassName spec is set, choosing the default provisioner.
    storageClass: synology-nfs-csi-retain
    size: 10Gi

    # -- Set to true to retain the PVC upon `helm uninstall`
    retain: true

  # Cache does NOT contain temporary transcoding data.
  cache:
    enabled: false
    mountPath: /cache

  media:
    enabled: true

    # -- Sets the persistence type
    # Valid options are pvc, emptyDir, hostPath, secret, configMap or custom
    type: pvc
    mountPath: /media

    # -- Storage Class for the config volume.
    # If set to `-`, dynamic provisioning is disabled.
    # If set to something else, the given storageClass is used.
    # If undefined (the default) or set to null, no storageClassName spec is set, choosing the default provisioner.
    storageClass: synology-nfs-csi-retain
    size: 500Gi  # TODO: adapt this value with the size you want to use

    # -- Set to true to retain the PVC upon `helm uninstall`
    retain: true

# persistence:
#   # -- Default persistence for configuration files.
#   # @default -- See below
#   config:
#     # -- Enables or disables the persistence item
#     enabled: false

#     # -- Sets the persistence type
#     # Valid options are pvc, emptyDir, hostPath, secret, configMap or custom
#     type: pvc

#     # -- Where to mount the volume in the main container.
#     # Defaults to `/<name_of_the_volume>`,
#     # setting to '-' creates the volume but disables the volumeMount.
#     mountPath:  # /config
#     # -- Specify if the volume should be mounted read-only.
#     readOnly: false
#     # -- Override the name suffix that is used for this volume.
#     nameOverride:

#     # -- Storage Class for the config volume.
#     # If set to `-`, dynamic provisioning is disabled.
#     # If set to something else, the given storageClass is used.
#     # If undefined (the default) or set to null, no storageClassName spec is set, choosing the default provisioner.
#     storageClass:  # "-"

#     # -- If you want to reuse an existing claim, the name of the existing PVC can be passed here.
#     existingClaim:  # your-claim

#     # -- Used in conjunction with `existingClaim`. Specifies a sub-path inside the referenced volume instead of its root
#     subPath:  # some-subpath

#     # -- AccessMode for the persistent volume.
#     # Make sure to select an access mode that is supported by your storage provider!
#     # [[ref]](https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes)
#     accessMode: ReadWriteOnce

#     # -- The amount of storage that is requested for the persistent volume.
#     size: 1Gi

#     # -- Set to true to retain the PVC upon `helm uninstall`
#     retain: false

# -- Configure the Security Context for the Pod
podSecurityContext: {}
#   runAsUser: 568
#   runAsGroup: 568
#   fsGroup: 568
#   # Hardware acceleration using an Intel iGPU w/ QuickSync
#   # These IDs below should be matched to your `video` and `render` group on the host
#   # To obtain those IDs run the following grep statement on the host:
#   # $ cat /etc/group | grep "video\|render"
#   # video:x:44:
#   # render:x:109:
#   supplementalGroups:
#   - 44
#   - 109

# resources:
#   requests:
#     # Hardware acceleration using an Intel iGPU w/ QuickSync and
#     # using intel-gpu-plugin (https://github.com/intel/intel-device-plugins-for-kubernetes)
#     gpu.intel.com/i915: 1
#     cpu: 200m
#     memory: 256Mi
#   limits:
#     # Hardware acceleration using an Intel iGPU w/ QuickSync and
#     # using intel-gpu-plugin (https://github.com/intel/intel-device-plugins-for-kubernetes)
#     gpu.intel.com/i915: 1
#     memory: 4096Mi
